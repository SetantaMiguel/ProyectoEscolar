@model WebApplication6.viewModels.IndexViewModel2
@using WebApplication6.Models;
@using WebApplication6.viewModels;
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Index";
}
@{
    ApplicationDbContext db = new ApplicationDbContext();
    var usuario = db.Users.Find(User.Identity.GetUserId());

}
<div class="container">
    <br />
    @{
        if (ViewBag.ModeloEstudiante == true)
        {
            <h2 class="alert alert-secondary">Control Disciplinario del Estudiante @ViewBag.name    </h2>

        }
        else
        {
            <h2 class="alert alert-secondary">Control Disciplinario de los Estudiantes</h2>
        }
    }

    <a class="btn btn-primary mx-2 " data-toggle="collapse" href="#multiCollapseExample1" role="button" aria-expanded="false" aria-controls="multiCollapseExample1">Filtros</a>

    <div class="collapse multi-collapse" id="multiCollapseExample1">
        <div class="card card-body">
            <div class="container-fluid">
                @using (Html.BeginForm())
                {
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">

                            <div class="row">
                                <select class="custom-select" name="AnioFiltro" id="ano">
                                    <option value="">
                                        --  Años --
                                    </option>
                                </select>
                                <select class="custom-select" name="MesFiltro">
                                    <option value="">
                                        --Mes--
                                    </option>
                                    <option value="1">
                                        Enero
                                    </option>
                                    <option value="2">
                                        Febrero
                                    </option>
                                    <option value="3">
                                        Marzo
                                    </option>
                                    <option value="4">
                                        Abril
                                    </option>
                                    <option value="5">
                                        Mayo
                                    </option>
                                    <option value="6">
                                        Junio
                                    </option>
                                    <option value="7">
                                        Julio
                                    </option>
                                    <option value="8">
                                        Agosto
                                    </option>
                                    <option value="9">
                                        Septiembre
                                    </option>
                                    <option value="10">
                                        Octubre
                                    </option>
                                    <option value="11">
                                        Noviembre
                                    </option>
                                    <option value="12">
                                        Diciembre
                                    </option>
                                </select>
                            </div>

                            <input type="submit" name="name" class="btn btn-block btn-warning m-2" value="Buscar" />
                        </div>
                    </div>
                }
            </div>

        </div>
    </div>
    <hr />
    <div>
        @if (ViewBag.ModeloEstudiante == true)
        {
            bool respues = Validador.PuedeEntrar(usuario.Id, "Crear Falta Disciplinaria");
            if (respues == true)
            {
                @Html.ActionLink("Añadir nuevo", "Create", null, new { @class = "btn btn-primary", data_modal = "" })
            }
            <p class="d-inline">|</p>
            @Html.ActionLink("Regresar", "Details", "Estudiantes", new { id = ViewBag.id }, new { @class = "btn btn-dark" })
        }
        else
        {


        }
    </div>
    <br />
    <table class="table table-hover">
        <tr class="bg-info">
            <th>
                @Html.DisplayNameFor(model => model.controlDisciplinarios.First().Fecha_Emision)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.controlDisciplinarios.First().Descripcion)
            </th>
            @if (ViewBag.ModeloEstudiante == null)
            {
                <th>
                    @Html.DisplayNameFor(model => model.controlDisciplinarios.First().Estudiantes.Nombre)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.controlDisciplinarios.First().IdentityUser.Empleado.Nombre)
            </th>
            <th></th>

        </tr>

        @foreach (var item in Model.controlDisciplinarios)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Fecha_Emision)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                @if (ViewBag.ModeloEstudiante == null)
                {
                    <td>
                        @{
                            var nombrecompleto = item.Estudiantes.Nombre + " " + item.Estudiantes.Apellido;
                        }
                        @nombrecompleto
                    </td>
                }
                <td>
                    @Html.ActionLink(item.IdentityUser.Empleado.Nombre, "Details", "Empleado", new { id = item.IdentityUser.Empleado.Id }, new { @class = "btn btn-info" })

                </td>
                <td>
                    @{
                        bool respues = Validador.PuedeEntrar(usuario.Id, "Borrar Falta Diciplinario");
                        if (respues == true)
                        {
                            @Html.ActionLink("Borrar", "Delete", new { id = item.Id_Control }, new { @class = "btn btn-danger", data_modal = "" })
                        }
                    }

                </td>
            </tr>
        }

    </table>
    @{Html.RenderPartial("_paginador", Model);}
</div>
@section scripts{
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        function ComboAno() {
            var n = (new Date()).getFullYear()
            var select = document.getElementById("ano");
            for (var i = n; i >= 1990; i--)select.options.add(new Option(i, i));
        };
        window.onload = ComboAno;

    </script>
}
@{
    if (ViewBag.ErrorFiltro == true)
    {
        ViewBag.ErrorFiltro = false;
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                onOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'error',
                title: 'No se encontro coincidencia para la busqueda'
            })
        </script>
    }


    if (ViewBag.SuccessDelete == true)
    {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                onOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'success',
                title: 'Se elimino correctamente'
            })
        </script>
    }
    else if (ViewBag.SuccessCreate == true)
    {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                onOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'success',
                title: 'Se Creo Correctamente'
            })
        </script>
    }
    else if (ViewBag.SuccessEdit == true)
    {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                onOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'success',
                title: 'Se edito Correctamente'
            })
        </script>
    }
}

}
