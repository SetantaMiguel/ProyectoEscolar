@model WebApplication6.Models.DetallePago

@{
    ViewBag.Title = "Create";
}


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>


<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script language="JavaScript" type="text/javascript">
    $(function () {
        $("#IdConceptoM").change(function () {
            var url = "@Url.Action("MostrarMonto","Pago")";
            var conceptoP = $("#IdConceptoM").val();
            var data = { conceptoP: conceptoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#MontoD").val(data);
                @*$.each(data, function (key, data) {
                    $("#MontoD").append('<option value=' + data.ConceptosPago.NombreConcepto + '>' + data.ConceptosPago.Monto + '</option>');
                });*@
            });
        });
    });
    $(document).ready(function () {
            var url = "@Url.Action("MostrarMonto","Pago")";
            var conceptoP = $("#IdConceptoM").val();
            var data = { conceptoP: conceptoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#MontoD").val(data);
                @*$.each(data, function (key, data) {
                    $("#MontoD").append('<option value=' + data.ConceptosPago.NombreConcepto + '>' + data.ConceptosPago.Monto + '</option>');
                });*@
            });
    });

    $(function () {
        $("#PagoAbonadoD").click(function () {
            var url = "@Url.Action("MostrarBalance","Pago")";
            var montoP = $("#MontoD").val();
            var pagoAbonadoP = $("#PagoAbonadoD").val();
            var data = { montoP: montoP, pagoAbonadoP: pagoAbonadoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#BalanceD").val(data);
                @*$.each(data, function (key, data) {
                    $("#MontoD").append('<option value=' + data.ConceptosPago.NombreConcepto + '>' + data.ConceptosPago.Monto + '</option>');
                });*@
            });
        });
    });
    $(document).ready(function () {
            var url = "@Url.Action("MostrarBalance","Pago")";
            var montoP = $("#MontoD").val();
            var pagoAbonadoP = $("#PagoAbonadoD").val();
            var data = { montoP: montoP, pagoAbonadoP: pagoAbonadoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#BalanceD").val(data);
                @*$.each(data, function (key, data) {
                    $("#MontoD").append('<option value=' + data.ConceptosPago.NombreConcepto + '>' + data.ConceptosPago.Monto + '</option>');
                });*@
            });
    });

    $(function () {
        $("#IdMonedaM").click(function () {
            var url = "@Url.Action("ObtenerEquivalencia","Pago")";
            var monedaP = $("#IdMonedaM").val();
            var pagoAbonadoP = $("#EfectivoD").val();
            var data = { monedaP: monedaP, pagoAbonadoP: pagoAbonadoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#EquivalenciaD").val(data);
                @*$.each(data, function (key, data) {
                    $("#MontoD").append('<option value=' + data.ConceptosPago.NombreConcepto + '>' + data.ConceptosPago.Monto + '</option>');
                });*@
            });
        });
    });
    $(document).ready(function () {
            var url = "@Url.Action("ObtenerEquivalencia","Pago")";
            var monedaP = $("#IdMonedaM").val();
            var pagoAbonadoP = $("#PagoAbonadoD").val();
            var data = { monedaP: monedaP, pagoAbonadoP: pagoAbonadoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#EquivalenciaD").val(data);
                @*$.each(data, function (key, data) {
                    $("#MontoD").append('<option value=' + data.ConceptosPago.NombreConcepto + '>' + data.ConceptosPago.Monto + '</option>');
                });*@
            });
    });


    $(function () {
        $("#PagoAbonadoD").click(function () {
            var url = "@Url.Action("ObtenerTotal","Pago")";
            var efectivoP = $("#MoraD").val();
            var pagoAbonadoP = $("#PagoAbonadoD").val();
            var data = { efectivoP: efectivoP, pagoAbonadoP: pagoAbonadoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#TotalD").val(data);
                
            });
        });
    });
    $(document).ready(function () {
        var url = "@Url.Action("ObtenerTotal","Pago")";
        var efectivoP = $("#MoraD").val();
        var pagoAbonadoP = $("#PagoAbonadoD").val();
        var data = { efectivoP: efectivoP, pagoAbonadoP: pagoAbonadoP };

        //pasar los datos al post
        $.post(url, data).done(function (data) {
            //se ejecutara si fue un exito
            $("#TotalD").val(data);
               
        });
    });







    $(function () {
        $("#IdMonedaM").focusout(function () {
            var url = "@Url.Action("ObtenerCambio","Pago")";
            var efectivoP = $("#EquivalenciaD").val();
            var pagoAbonadoP = $("#TotalD").val();
            var data = { efectivoP: efectivoP, pagoAbonadoP: pagoAbonadoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#CambioD").val(data);
                
            });
        });
    });
    $(document).ready(function () {
            var url = "@Url.Action("ObtenerCambio","Pago")";
            var efectivoP = $("#EquivalenciaD").val();
            var pagoAbonadoP = $("#TotalD").val();
            var data = { efectivoP: efectivoP, pagoAbonadoP: pagoAbonadoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#CambioD").val(data);
               
            });
    });

    $(function () {
        $("#IdConceptoM").focusout(function () {
            var url = "@Url.Action("ObtenerMora","Pago")";
            var conceptoP = $("#IdConceptoM").val();
            var montoP = $("#MontoD").val();
            var data = { conceptoP: conceptoP, montoP: montoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#MoraD").val(data);
                @*$.each(data, function (key, data) {
                    $("#MontoD").append('<option value=' + data.ConceptosPago.NombreConcepto + '>' + data.ConceptosPago.Monto + '</option>');
                });*@
            });
        });
    });
    $(document).ready(function () {
            var url = "@Url.Action("ObtenerMora","Pago")";
            var conceptoP = $("#IdConceptoM").val();
            var montoP = $("#MontoD").val();
            var data = { conceptoP: conceptoP, montoP: montoP };

            //pasar los datos al post
            $.post(url, data).done(function (data) {
                //se ejecutara si fue un exito
                $("#MoraD").val(data);
                @*$.each(data, function (key, data) {
                    $("#MontoD").append('<option value=' + data.ConceptosPago.NombreConcepto + '>' + data.ConceptosPago.Monto + '</option>');
                });*@
            });
        });
</script>





<div class="container">
    <hr />
    <h1 class=" text-center fa-header alert-heading">Ingreso de Nuevo Pago</h1>
</div>



            &nbsp;&nbsp;
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="form-horizontal w-75">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.IdPago, "Codigo de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdPago, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.Why } })
                    @Html.ValidationMessageFor(model => model.IdPago, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdConcepto, "Concepto de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdConcepto", ViewBag.IdConceptoPago as SelectList, new { @class = "form-control", id = "IdConceptoM" })
                    @Html.ValidationMessageFor(model => model.ConceptoPagoSet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Id_Tipo, "Tipo de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Id_Tipo", ViewBag.IdTipo as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TipoPagoSet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Monto, "Monto a Pagar", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Monto, new { htmlAttributes = new { @class = "form-control", id = "MontoD" } })

                    @Html.ValidationMessageFor(model => model.Monto, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.PagoAbonado, "Pago Abonado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PagoAbonado, new { htmlAttributes = new { @class = "form-control", id = "PagoAbonadoD" } })

                    @Html.ValidationMessageFor(model => model.PagoAbonado, "", new { @class = "text-danger" })
                </div>
            </div>








            <div class="form-group">
                @Html.LabelFor(model => model.Balance, "Balance de la Transaccion", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", id = "BalanceD" } })

                    @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdEstado, "Estado de la Transaccion", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdEstado", ViewBag.IdEstado as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EstadoSet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mora, "Mora", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mora, new { htmlAttributes = new { @class = "form-control", id = "MoraD" } })
                    @Html.ValidationMessageFor(model => model.Mora, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Total, "Total", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", id = "TotalD" } })
                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="control-label col-md-2"><span>Efectivo</span></div>
                &nbsp;&nbsp;
                <div class="col-md-10">
                    <input name="Id_Efectivo" id="EfectivoD" class="form-control" />
                </div>
            </div>


            <div class="form-group">
                <div class="control-label col-md-2"><span>Moneda</span></div>
                <div class="col-md-10">
                    @Html.DropDownList("IdMoneda", ViewBag.IdMoneda as SelectList, new { @class = "form-control", id = "IdMonedaM" })
                    @Html.ValidationMessageFor(model => model.MonedaSet, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.IdEquivalencia, "Equivalencia", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdEquivalencia, new { htmlAttributes = new { @class = "form-control", id = "EquivalenciaD" } })
                    @Html.ValidationMessageFor(model => model.IdEquivalencia, "", new { @class = "text-danger" })
                </div>
            </div>







            <div class="form-group">
                @Html.LabelFor(model => model.Cambio, "Cambio", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cambio, new { htmlAttributes = new { @class = "form-control", id = "CambioD" } })
                    @Html.ValidationMessageFor(model => model.Cambio, "", new { @class = "text-danger" })
                </div>
            </div>









        </div>






    </div>


    <div class="form-group text-md-center">
        <div class="col-md-offset-10 col-md-40">
            <input type="submit" value="Procesar Pago" class="btn btn-success" />
            @Html.ActionLink("Facturar", "PrintIndex","Facturas" , null, new { @class = "btn btn-dark" })

        </div>
    </div>




}