@model WebApplication6.Models.EmpleadoMaterias

@{
    Layout = null;
}

<div class="container">
    <hr />
    <h2 class="alert alert-success m-1 text-center">Añadir Clase al Empleado</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-row">
                @Html.LabelFor(model => model.Id_Materia, "Materia", htmlAttributes: new { @class = "p-1" })
                <div class=" col-md-10">
                    @Html.DropDownList("Id_Materia", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Id_Materia, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 text-md-center">
                    <input type="submit" value="Guardar" class="btn btn-success" />
                    @Html.ActionLink("Regresar","Index",new {IdEmpleado=Convert.ToInt32(ViewBag.id)  },new { @class="btn btn-dark",data_modal=""})
                </div>
            </div>
        </div>
    }


</div>
<script language="JavaScript" type="text/javascript">
    $(function () {
        $("#Save").click(function () {
            $('#Save').prop('disabled', true);
            var url = "@Url.Action("Create", "EmpleadoMaterias")";
            var _Id_Materia = $("#Id_Materia").val();
            var data = { Id_Materia: _Id_Materia }
            $.post(url, data).done(function (data) {

                if (data.Ok) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2500,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: data.Mensaje
                    })
                    setTimeout(function(){ window.location = window.location;  }, 2000);

                }
                else {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: 'Digito campos vacios'
                    })
                         $('#Save').prop('disabled', false);
                }


            }).fail(function () {
                  $('#Save').prop('disabled', false);
               const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: 'Ocurrio un error en el servidor'
                    })
            }).always(function () {
            });
        });
    });
</script>

