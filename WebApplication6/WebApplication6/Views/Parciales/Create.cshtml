@model WebApplication6.Models.Parciales

@{
    Layout = null;
}

<div class="container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="h4 alert alert-success shadow p-3 mt-2">Crear Parcial</div>
            <div class="font-weight-bold">
                Rango del Semestre:
                <div>
                    Desde:   @ViewBag.InicoSemestre
                </div>
                <div>
                    Hasta:   @ViewBag.FinalSemestre
                </div>
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre_Parcial, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Nombre_Parcial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre_Parcial, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Dt_Inicio, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Dt_Inicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Dt_Inicio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Dt_Final, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Dt_Final, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Dt_Final, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Guardar" id="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

</div>


<script language="JavaScript" type="text/javascript">
    $(function () {
        $("#Save").click(function () {

            $('#Save').prop('disabled', true);
            var url = "@Url.Action("Create", "Parciales")";
            var _Nombre_Parcial= $("#Nombre_Parcial").val();
            var _Dt_Final= $("#Dt_Final").val();
            var _Dt_Inicio= $("#Dt_Inicio").val();
            var _Estado_Parcial = $("#Estado_Parcial").val();
            if (_Dt_Inicio >= _Dt_Final) {
                 $('#Save').prop('disabled', false);
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000,
                    timerProgressBar: true,
                    onOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'error',
                    title: 'Fallo en rangos de fecha'
                })
            } else {
                            var data = {
                Nombre_Parcial: _Nombre_Parcial,
                Dt_Final:_Dt_Final,
                Dt_Inicio:_Dt_Inicio,
                Estado_Parcial:_Estado_Parcial
            }
            $.post(url, data).done(function (data) {

                if (data.Ok) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: data.Mensaje
                    })
                    setTimeout(function(){ window.location = window.location;  }, 2000);

                }
                else {
                    Swal.fire({
                      position: 'top-end',
                        icon: 'error',
                        title: data.Mensaje,
                      showConfirmButton: false,
                      timer: 1500
                    })
                    $('#Save').prop('disabled', false);
                }

            }).fail(function () {
                  $('#Save').prop('disabled', false);
               const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: 'Ocurrio un error en el servidor'
                    })
            }).always(function () {
            });

            }


        });
    });
</script>
