@model WebApplication6.Models.TipoEvaluacion

@{
    Layout = null;
}


<div class="container p-1">
    <h3 class="alert alert-danger">¿Esta seguro de borrar este tipo de evaluacion?</h3>
    <div>
        @Html.HiddenFor(model => model.Id_TipoEvaluacion)
        <hr />
        <div class="p-1">
            Tipo: <p class="h4">@Html.DisplayFor(model => model.strTipoEvaluacion)</p>
            Descripcion: <p class="h4">@Html.DisplayFor(model => model.DescripcionTipEvaluacion)</p>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <hr />
            <div class="form-actions no-color text-md-center">
                <input type="button" value="Desactivar" class="btn btn-danger" id="Save" />
            </div>
        }
    </div>
</div>
<script language="JavaScript" type="text/javascript">
    $(function () {
        $("#Save").click(function () {
            $('#Save').prop('disabled', true);
            var url = "@Url.Action("Delete", "TipoEvaluacions")";
            var _id = $("#Id_TipoEvaluacion").val();
            var data = { id:_id }
            $.post(url, data).done(function (data) {
                if (data.Ok) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: 'Se borro correctamente'
                    })
                    setTimeout(function(){ window.location = window.location;  }, 2800);SS

                }
                else {
                    $('#Save').prop('disabled', false);
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: 'Digito campos vacios'
                    })
                }


            }).fail(function () {
                $('#Save').prop('disabled', false);
               const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: 'Ocurrio un error en el servidor'
                    })
            }).always(function () {

            });
        });
    });

</script>