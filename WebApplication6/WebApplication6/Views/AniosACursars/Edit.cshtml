@model WebApplication6.Models.AniosACursar

@{
    ViewBag.Title = "Edit";
}
<div class="container">
    <hr />
    <h2 class="alert alert-success text-center">Editar nombre del años escolar</h2>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Str_Curso, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Str_Curso, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Str_Curso, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-center">
                <div class="col-md-offset-2">
                    <input type="button" value="Guardar" class="btn btn-success" id="Save"/> 
                </div>
            </div>
        </div>
    }


</div>
<script language="JavaScript" type="text/javascript">
    $(function () {
        $("#Save").click(function () {
            var url = "@Url.Action("Edit", "AniosACursars")";
            var _strCurso = $("#Str_Curso").val();
            var _Id = $("#Id").val();
            var data = { Str_Curso: _strCurso, Id: _Id }
            $.post(url, data).done(function (data) {
                if (data.Ok) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: 'Se guardo exitosamente'
                    })
                    setTimeout(function(){ window.location = window.location;  }, 2000);


                }
                else {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: 'Digito campos vacios'
                    })
                }


            }).fail(function () {
               const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: 'Ocurrio un error en el servidor'
                    })
            }).always(function () {
            });
        });
    });
</script>